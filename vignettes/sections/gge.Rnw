\subsection{GGE}
\label{gge}

\subsubsection{Theory of the model}

The GGE model is the same than the AMMI model except that the PCA is done on a matrix centered on the location: germplasm and interaction effects are merged \footnote{Note than in \pack, as for AMMI, the PCA is done on germplasm and interaction effects + residuals.}.

The GGE model can be written as followed:

\begin{equation}
Y_{ijk} = \mu + \theta_{j} + rep_{k}(\theta_{j}) + \sum_{n}^{N} \lambda_{n} \gamma_{in} \omega_{jn} + \varepsilon_{ijk}; \quad \varepsilon_{ijk} \sim \mathcal{N} (0,\sigma^2)
\label{modele_gge}
\end{equation}

with,

\begin{tabular}{ll}
$Y_{ijk}$ & the phenotypic value for replication $k$, germplasm $i$ and location $j$,\\
$\mu$ & the general mean,\\
$\theta_{j}$ & the effect of location $j$,\\
$rep_{k}(\theta_{j})$ & effect of replication $k$ nested in location,\\
$N$ & the number of dimension (PCA componant) which has as maximum value the number of location,\\
$\lambda_{n}$ & the eigen value for componant $n$,\\
$\gamma_{in}$ & eigen vector for germplasm $i$ for componant $n$,\\
$\omega_{jn}$ & eigen vector for  location $j$  for componant $n$.\\
$\varepsilon_{ijk}$ & the residuals.\\
\end{tabular}

~\\

or, if there is year effect:


\begin{equation}
Y_{ijkl} = \mu + \theta_{j} + rep_{k}(\theta_{j}\beta_{l}) +\sum_{n}^{N} \lambda_{n} \gamma_{in} \omega_{jn} + 
\beta_{l} + \beta_{l}\alpha_{i} + \beta_{l}\theta_{j} + 
\varepsilon_{ijk}; \quad \varepsilon_{ijk} \sim \mathcal{N} (0,\sigma^2)
\label{ammi_anova}
\end{equation}

With,

\begin{tabular}{ll}
$Y_{ijkl}$ & the phenotypic value for replication $k$, germplasm $i$, location $j$ and year $l$, \\
$\mu$ & the general mean, \\
$\theta_{j}$ & location $j$ effect, \\
$rep_{k}(\theta_{j}\beta_{l})$ & the replication $k$ nested in location and year effect, \\
$\eta_{i}\nu_{j}$ & the germplasm $\times$ location effect, \\
$\beta_{l}$ & the year $l$ effect, \\
$\beta_{l}\alpha_{i}$ & the year $\times$ germplasm interaction effect, \\
$\beta_{l}\theta_{j}$ & the year $\times$ location interaction effect, \\
$\varepsilon_{ijk}$ & the residuals.\\
\end{tabular}


\subsubsection{Steps with \pack}


For GGE analysis, everything is exactly the same than for AMMI analysis except you should settle \texttt{gxe\_analysis = "GGE"} in \texttt{GxE}.
You can follow these steps (Figure \ref{main_workflow}):

\begin{enumerate}
\item Run the model with \texttt{GxE} and \texttt{gxe\_analysis = "GGE"}
\item Check model outputs with graphs to know if you can continue the analysis with \texttt{check\_model}
\item Get mean comparisons for each factor with \texttt{mean\_comparisons} and vizualise it with \texttt{plot}
\item Get groups of each parameters with \texttt{parameters\_groups} and visualise it with \texttt{plot}
\end{enumerate}

We will not details everything as it the same than AMMI in the code.
Of course the calculation is different on the interaction matrix so you'll get different results.

The workflow is therefore :

\subsubsection{Run the model}
<<message=TRUE,cache=FALSE>>=
out_gge = GxE(data_GxE, variable = "y1", gxe_analysis = "GGE")
@

\subsubsection{Check and visualize model outputs}

\paragraph{Check the model}
<<message=TRUE,cache=FALSE>>=
out_check_gge = check_model(out_gge)
@

\paragraph{Visualize outputs}
<<message=TRUE,cache=FALSE>>=
p_out_check_gge = plot(out_check_gge)
@

\subsubsection{Get and visualize mean comparisons}

\paragraph{Get mean comparisons}
<<message=TRUE,cache=FALSE>>=
out_mean_comparisons_gge = mean_comparisons(out_check_gge, p.adj = "bonferroni")
@

\paragraph{Visualize mean comparisons}
<<message=TRUE,cache=FALSE>>=
p_out_mean_comparisons_gge = plot(out_mean_comparisons_gge)
@

\subsubsection{Get and visualize biplot}

\paragraph{Get biplot}
<<message=TRUE,cache=FALSE>>=
out_biplot_gge = biplot_GxE(out_check_gge)
@

\paragraph{Visualize biplot}
<<message=TRUE,cache=FALSE>>=
p_out_biplot_gge = plot(out_biplot_gge)
@

Compared to AMMI analysis, in the output of \texttt{p\_out\_biplot\_gge}, 
\texttt{which\_won\_where},
\texttt{mean\_vs\_stability} and 
\texttt{discrimitiveness\_vs\_representativeness}
are displayed.

The description of these following graphs are greatly inspired from \citet{ceccarelli_manual_2012}.

<<message=TRUE,cache=FALSE>>=
biplot = p_out_biplot_gge$biplot
@

\begin{itemize}

\item The which won where graph

This graph allow to detect location where germplasm (and the interaction) behave better : 'which won where' \citep{gauch_statistical_2008,yan_gge_2007}.
The germplasms which have the largest value in a sector "win" in the location present in that sector.
The information is summarized in the legend of the plot.
See \texttt{?plot.PPBstats} for more details on this plot.


<<message=TRUE,cache=FALSE>>=
biplot$which_won_where
@

\item The mean vs stability graph.

\begin{itemize}
\item mean
A red circle define the average location.
An high score mean a greater mean performance of an entry.
Entries with a score above zero means entries with above-average means.
Entries with a score below zero means entries with below-average means.
Note that the distance from the biplot origin to the average location circle (represented with an arrow), is a measure of the relative importance of the germplasm main effect versus the entry by location interaction.
The longer the arrow is, the more important is germplasm effect and the more meaningful is the selection based on mean performance. 

<<message=TRUE,cache=FALSE>>=
biplot$mean_vs_stability$mean_performance
@

\item stability
This information is related to the ecovalence graph.
The score is equal to the length of the projection.
A high score represents a low stability (i.e. an high entry by location interaction).


<<message=TRUE,cache=FALSE>>=
biplot$mean_vs_stability$stability_performance
@

\end{itemize}


\item The discrimitiveness vs representativeness graph. 
It is interessting to assess the ability of the locations to discriminate the germplasms and their ability to represent the target locations. 

The closer a given location is next to the averge location (represented by a red circle), the more desirable it is judged on both discrimination and representativeness.

\begin{itemize}

\item discrimitiveness
The higher the value, the highest the discrimitiveness for locations.

<<message=TRUE,cache=FALSE>>=
biplot$discrimitiveness_vs_representativeness$discrimitiveness
@


\item representativeness
The highest the value, the less representative the location.

<<message=TRUE,cache=FALSE>>=
biplot$discrimitiveness_vs_representativeness$representativeness
@

\item discrimitiveness vs representativeness
The location combining better score (i. e.discrimination and representativeness) are the ones that could be used to test germplasms as they are more representative of all the locations.
This has to be done severals year to get robust results.
The highest the score, the more representative the location.

<<message=TRUE,cache=FALSE>>=
biplot$discrimitiveness_vs_representativeness$discrimitiveness_vs_representativeness
@

\end{itemize}

\end{itemize}

\subsubsection{Get and vizualise groups of parameters}

\paragraph{Get groups of parameters}

<<message=TRUE,cache=FALSE>>=
# First run the models
gge_2 = GxE(data_GxE, variable = "y2", gxe_analysis = "GGE")
gge_3 = GxE(data_GxE, variable = "y3", gxe_analysis = "GGE")

# Then check the models
out_check_gge_2 = check_model(gge_2)
out_check_gge_3 = check_model(gge_3)

# Then run the function for germplasm. It can also be done on location or year if there are year in the data set.
out_parameter_groups = parameter_groups(
  list("y1" = out_check_gge, "y2" = out_check_gge_2, "y3" = out_check_gge_3), 
  "germplasm"
  )
@

\paragraph{Visualize groups of parameters}
<<message=TRUE,cache=FALSE>>=
p_germplasm_group = plot(out_parameter_groups)
@

