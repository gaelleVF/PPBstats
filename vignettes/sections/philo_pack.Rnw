\section{Philosophy of \pack}
\label{philo}

\subsection{What is \PPB ?}

\begin{itemize}
\item \textbf{decentralized the selection}

When decentralizing the selection in target environment \citep{desclaux_changes_2008}, the phenotypic trait is the sum of genetic ($G$), environmental ($E$) and interaction between the two ($G \times E$) : $P = G + E + G \times E$.
Braod sens heritability of a given trait is then:
\begin{displaymath}
h^2_{sl} = \frac{var(G)}{var(G) + var(E) + var(G\times E)}
\end{displaymath}

Heritability taking into account the network is therefore superior or equal to heritability on a given site because $var(G\times E) > 0$.
When facing a wide diversity of agroecological environment and practices, decentralized breeding is a key point to select adapted variety to local agro-system.

\item \textbf{involve all actors in the breeding decision process}: farmers, technicians, researcher, facolitators, consumers ... Such involvement empower all actors and answer the real needs of actors  \citep{sperling_framework_2001}.

\end{itemize}


\subsection{Objectives of \pack}

\pack~aims to set, describe and analyse balanced and unbalanced trials in decentralized participatory plant breeding programmes.
The statistical procedures are based on frequentist and bayesian approaches.

\subsection{Workflow and function relations in \pack}

\pack~is divided into two sets of functions:

\begin{itemize}
\item Main functions
\item Second functions
\end{itemize}

In this vignette, we only used examples with main functions.
Nevertheless, second functions could be used in other context to answer specific questions.
Figure~\ref{main_workflow} displays the main functions and their relations.
Table~\ref{function_descriptions_workflow} describe each of the main functions.

Figure~\ref{workflow_2} display second functions used in the main functions.
Table~\ref{function_descriptions_workflow_2} describe each of the second functions.

You can have more information for each function by typing \texttt{?function\_name} in your \R~session.

%get.PPBstats.data
%extra_functions


\begin{figure}[H]
\begin{center}
\includegraphics[width=\textwidth,page=1]{PBBstats_function_relations}
\end{center}
\caption{Main functions used in the workflow.}
\label{main_workflow}
\end{figure}

\begin{table}[H]
\begin{tabular}{cp{.6\textwidth}}

\hline
\textbf{function name} & \textbf{description} \\ \hline

\texttt{design\_experiment} & Provides experimental design for several situations \\ \hline

\texttt{describe\_data} & Describe the data set in order to choose the appropriate analysis to carry out \\ \hline

\texttt{model\_1} & Run model 1 \\ \hline

\texttt{model\_2} & Run model 2 \\ \hline

\texttt{GxE} & Run AMMI or GGE model \\ \hline

\texttt{check\_model} &  Check if the model went well \\ \hline

\texttt{mean\_comparisons} &  Get mean comparisons \\ \hline

\texttt{parameter\_groups} & Get groups of parameters based on multivariate analysis \\ \hline

\texttt{cross\_validation\_model\_2} & Run complete cross validation with model 2 \\ \hline

\texttt{predict\_the\_past\_model\_2} & Estimate value of a germplasm in an environment based on model 2 \\ \hline

\texttt{biplot\_GxE} & Compute ecovalence and format PCA results \\ \hline

\texttt{get\_ggplot} & Get ggplot objects to visualize output \\ \hline

\end{tabular}
\caption{Main function descriptions.}
\label{function_descriptions_workflow}
\end{table}


\begin{figure}[H]
\begin{center}
\includegraphics[width=\textwidth,page=2]{PBBstats_function_relations}
\includegraphics[width=\textwidth,page=3]{PBBstats_function_relations}
\end{center}
\caption{Second functions used in main functions.}
\label{workflow_2}
\end{figure}

\begin{table}[H]
\begin{tabular}{cp{.4\textwidth}}

\hline
\textbf{function name} & \textbf{description} \\ \hline

\texttt{get.env.info} & Get regional farms data and satellite farms data \\ \hline

\texttt{GxE\_build\_interaction\_matrix} & Compute interaction matrix \\ \hline

\texttt{check\_model\_model\_1} & Check if the \texttt{model\_1} model went well  \\ \hline

\texttt{check\_model\_model\_2} & Check if the \texttt{model\_2} model went well \\ \hline

\texttt{check\_model\_GxE} & Check if the GxE model went well \\ \hline

\texttt{parameter\_groups\_GxE} & Get matrix with variables in column and effect in row from \texttt{check\_model\_GxE} \\ \hline

\texttt{parameter\_groups\_model\_2} & Get matrix with variables in column and effect in row from \texttt{check\_model\_model\_2} \\ \hline

\texttt{comp.parameters} & Get parameter comparisons two by two or to a given threshold based on MCMC outputs \\ \hline

\texttt{get.significant.groups} & Get significant groups of differences for a set of parameters based on MCMC outputs \\ \hline

\texttt{get.at.least.X.groups} & Get the value of type one error needed to have X groups \\ \hline

\texttt{mean\_comparisons\_GxE} & Get mean comparisons from \texttt{check\_model\_GxE} \\ \hline

\texttt{mean\_comparisons\_model\_1} & Get mean comparisons from \texttt{check\_model\_model\_1} \\ \hline

\texttt{mean\_comparisons\_model\_2} &Get mean comparisons from \texttt{check\_model\_model\_2}  \\ \hline

\texttt{mean\_comparisons\_predict\_the\_past\_model\_2} & Get mean comparisons from \texttt{predict\_the\_past\_model\_2} \\ \hline

\texttt{ggplot\_parameter\_groups} & Get ggplot from \texttt{parameter\_groups} \\ \hline

\texttt{ggplot\_check\_model\_GxE} & Get ggplot from \texttt{check\_model\_GxE} \\ \hline

\texttt{ggplot\_check\_model\_model\_1} & Get ggplot from \texttt{check\_model\_model\_1} \\ \hline

\texttt{ggplot\_check\_model\_model\_2} & Get ggplot from \texttt{check\_model\_model\_2} \\ \hline

\texttt{ggplot\_cross\_validation\_model\_2} & Get ggplot from \texttt{cross\_validation\_model\_2} \\ \hline

\texttt{ggplot\_mean\_comparisons\_GxE} & Get ggplot from \texttt{mean\_comparisons\_GxE} \\ \hline

\texttt{ggplot\_mean\_comparisons\_model\_1} & Get ggplot from \texttt{mean\_comparisons\_model\_1} \\ \hline

\texttt{ggplot\_mean\_comparisons\_model\_2} & Get ggplot from \texttt{mean\_comparisons\_model\_2} \\ \hline

\texttt{ggplot\_mean\_comparisons\_predict\_the\_past\_model\_2} & Get ggplot from \texttt{mean\_comparisons\_predict\_the\_past\_model\_2} \\ \hline

\texttt{ggplot\_biplot\_GxE} & Get ggplot from \texttt{biplot\_GxE} \\ \hline

\texttt{ggplot\_discrimitiveness\_vs\_representativeness} & Get "discrimitiveness vs representativeness" ggplot from PCA on interaction matrix \\ \hline

\texttt{ggplot\_mean\_vs\_stability} & Get "mean vs stability" ggplot from PCA on interaction matrix \\ \hline

\texttt{ggplot\_which\_won\_where} & Get "which won where" ggplot from PCA on interaction matrix \\ \hline

\end{tabular}
\caption{Second function descriptions.}
\label{function_descriptions_workflow_2}
\end{table}

Two other funtions are also in the package:


\begin{table}[H]\begin{center}
\begin{tabular}{cl}
\hline
\texttt{common\_functions} & Some functions used in several functions of PPBstats \\ \hline
\texttt{gget.PPBstats.data} & Get PPBstats datas to run example of the vignette \\ \hline
\end{tabular}
\end{center}\end{table}



\subsection{Frequentist statistics}

!!! TO DO !!!

\subsubsection{Theory}

\subsubsection{Mean comparisons}

\subsection{Bayesian statistics}
\label{section_bayes}

\subsubsection{Theory}

The analyses performed in \pack~are based on Bayesian statistics.

Bayesian statistics are based on the Bayes theorem:

\begin{displaymath}
Pr(\theta|y) \propto Pr(\theta) Pr(y|\theta)
\end{displaymath}

with 
$Pr(\theta|y)$ the posterior, 
$Pr(y|\theta)$ the likelihood and 
$Pr(\theta)$ the prior.

The parameters' distribution, knowing the data (the posterior), is proportional to the distribution \textit{a  priori} (the prior) $\times$ the information brought by the data (the likelihood).

The more information (i.e. the larger the data set and the better the model fits the data), the less the prior would be of importance.
If the priors equal the posteriors, it means that there is not enough data or the model does not fit the data.


Bayesian inference is based on the posterior distribution of model parameters.
This distribution could not be calculated explicitely for the hierarchical model used in here (see section~\ref{section_model1} and section~\ref{section_model2}) but could be estimated using Markov Chain and Monte Carlo (MCMC) methods.

These methods simulate values of model parameters according to a Markov chain that converges to the posterior distribution of model parameters \citep{robert_bayesian_2001}.

MCMC methods were implemented using \texttt{JAGS} by the \texttt{R} package \texttt{rjags} that performed Gibbs sampling \citep{robert_bayesian_2001}.
Two MCMC chains were run independently to test for convergence using the Gelman-Rubin test.
This test was based on the variance within and between the chains \citep{gelman_inference_1992}.

A burn-in and lots of iterations were needed in the MCMC procedure.
In our case, the burn-in had 1000 iterations, then 100 000 iterations are done by default\footnote{You can change it with the argument \texttt{nb\_iterations} in functions \texttt{MC} and \texttt{FWH}} with a thinning interval of 10 to reduce autocorrelations between samples, so that 10 000 samples were available for inference for each chain by default\footnote{There are \texttt{nb\_iterations}/10 values for each chain. This can be changed with the \texttt{thin} argument of the functions.}.
 
The final distribution of a posterior is the concatenation of the two MCMC chains: 20 000 samples.


\subsubsection{Mean comparisons}
\label{mean_comp}
In this part, the mean of each entry is compared to the mean of each other entry.
Let $H_{0}$ and $H_{1}$ denote the hypotheses:

\begin{displaymath}
  H_{0} : \mu_{ij} \ge \mu_{i'j} , \; H_{1} : \mu_{ij} < \mu_{i'j}.
\end{displaymath}

The difference $\mu_{ij}-\mu_{i'j}$ between the means of germplasm $i$ and population $i'$ in environment $j$ was considered as significant if either $H_{0}$ or $H_{1}$ had a high posterior probability, that is if $Pr\{H_{0}|y\} > 1 - \alpha$ or $Pr\{H_{1}|y\}> 1 - \alpha$, where
$\alpha$ was some specified threshold.
The difference was considered as not significant otherwise.
The posterior probability of a hypothesis was estimated by the proportion of MCMC simulations for
which this hypothesis was satisfied (Figure~\ref{proba}).

Groups are made based on the probabilites.
Germplasms which share the same group are not different.
Germplasms which do not share the same groupe are different.

The threshold $\alpha$ that depends on agronomic objectives.
This threshold is set by default to $\alpha=0.1/I$ (with $I$ the number of entries in a given environnement).
It corresponded to a `soft' Bonferroni correction, the Bonferroni correction being very conservative.

As one objective of this PPB programme is that farmers (re)learn selection, the threshold could be adjusted to allow the detection of at least two groups instead of having farmers choose at random.
The initial value could be set to $\alpha=0.1/I$ and if only one group is obtained, then this value could be adjusted to allow the detection of two groups.
In this cases, the farmers should be informed of the lower degree of confidence that there are significant differences among entries.

\begin{figure}[H]
\begin{center}
\begin{pspicture}(10,10)
\rput[bl](0,0){\includegraphics[width=.6\textwidth]{proba}}
\rput[b](3,7){$\mu_{ij}$}
\rput[b](7.5,7){$\mu_{i'j}$}
\rput[b](3,3){$\mu_{ij} - \mu_{i'j}$}
\end{pspicture}
\end{center}
\caption{Mean comparison between $\mu_{ij}$ (dash line) and $\mu_{i'j}$ (plain line).}
\label{proba}
\end{figure}

%% R code to get proba.pdf %%
%
%pdf("proba.pdf")
%
%par(mfrow=c(2,1),mar=c(3,5,1,1))
%
%a = rnorm(100000,10)
%d <- density(a)
%plot(d, type='l', xlab="", main="", xlim=c(5,18), lty=2, lwd=3)
%
%b = rnorm(100000,12)
%d <- density(b)
%lines(d,lty=1, lwd=3)
%
%diff = a - b
%
%d <- density(diff)
%plot(d, type='l', xlab="", main="", lty=1, lwd=3)
%
%toget = which(d$x>=0)
%H0x = d$x[toget]
%H0y = d$y[toget]
%
%toget = which(d$x<0)
%H1x = d$x[toget]
%H1y = d$y[toget]
%
%x <- H0x
%y <- H0y
%polygon( c(x,rev(x)), c(rep(0,length(x)),rev(y)), border=NA, col="orange" )
%
%x <- H1x
%y <- H1y
%polygon( c(x,rev(x)), c(rep(0,length(x)),rev(y)), border=NA, col="darkgreen" )
%
%text(-2.5,0.02,"H1", cex=2, col="white")
%text(0.55,0.02,"H0", cex=2, col="white")
%
%dev.off()

In \pack, mean comparisons are done with \texttt{mean\_comparisons}.
You can choose on which parameters to run the comparison (\texttt{parameter} argument) and the $\alpha$ type one error (\texttt{alpha} argument).
The soft Bonferonni correction is applied by default (\texttt{p.adj} argument).
More informations on this function by typing \texttt{?mean\_comparisons}.


\subsection{Let's go!}
To continue, load the development version of the package:

<<message=TRUE,cache=FALSE,eval=FALSE>>=
devtools::install_github("priviere/PPBstats")
@

, load it 

<<message=TRUE,cache=FALSE,eval=FALSE>>=
library(PPBstats)
@

and download from internet the data used in this vignette (this is useful to earn lots of time!) :

<<message=FALSE,cache=FALSE,eval=FALSE>>=
get.PPBstats.data() # not run
# |=======================================================================| 100%
# The data are downloaded in ./data_PPBstats/ 
# You can now load the data, for example load("./data_PPBstats/out1.Rdata").
@

The data have always the following columns : location, year, germplasm, block, X, Y as factors followed by the variables.


%The example in this vignette were performed with a computer with 4 Gb of memory and the following processor : Intel(R) Core(TM) i5-4210M CPU @ 2.60GHz.
%This gives an idea about memory and processor needed to run the analysis.

